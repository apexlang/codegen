spec: ../spec.apexlang
config:
  package: outputtest
  module: github.com/apexlang/outputtest
  aliases:
    UUID:
      type: uuid.UUID
      import: github.com/google/uuid
      parse: uuid.Parse
      format: String
  logger:
    import: github.com/go-logr/logr
    interface: logr.Logger
generates:
  openapi.yaml:
    module: '../../../src/openapiv3/mod.ts'
    visitorClass: OpenAPIV3Visitor
  proto/service.proto:
    module: '../../../src/proto/mod.ts'
    visitorClass: ProtoVisitor
    config:
      options:
        go_package: github.com/apexlang/outputtest/proto
    runAfter:
      - command: |
          protoc
          --go_out=.
          --go_opt=paths=source_relative
          --go-grpc_out=.
          --go-grpc_opt=paths=source_relative
          proto/service.proto
  pkg/outputtest/interfaces.go:
    module: '../../../src/go/mod.ts'
    visitorClass: InterfacesVisitor
  pkg/outputtest/msgpack.go:
    module: '../../../src/go/mod.ts'
    visitorClass: MsgPackVisitor
  pkg/outputtest/fiber.go:
    module: '../../../src/go/mod.ts'
    visitorClass: FiberVisitor
  pkg/outputtest/grpc.go:
    module: '../../../src/go/mod.ts'
    visitorClass: GRPCVisitor
    config:
      protoPackage: github.com/apexlang/outputtest/proto
  pkg/outputtest/services.go:
    #ifNotExists: true
    module: '../../../src/go/mod.ts'
    visitorClass: ScaffoldVisitor
    config:
      types:
        - service
  pkg/outputtest/repositories.go:
    #ifNotExists: true
    module: '../../../src/go/mod.ts'
    visitorClass: ScaffoldVisitor
    config:
      names:
        - Repository
  cmd/main.go:
    #ifNotExists: false  # Change to true to control dependency injection
    module: '../../../src/go/mod.ts'
    visitorClass: MainVisitor