spec: apex.axdl
config:
  package: {{.package}}
  module: {{.module}}
  logger:
    import: "github.com/go-logr/logr"
    interface: "logr.Logger"
generates:
  openapi.yaml:
    module: '{{ .module_openapi3 }}'
    visitorClass: OpenAPIV3Visitor
  proto/service.proto:
    module: '{{ .module_proto }}'
    visitorClass: ProtoVisitor
    config:
      options:
        go_package: {{.module}}/proto
    runAfter:
      - command: |
          protoc
          --go_out=.
          --go_opt=paths=source_relative
          --go-grpc_out=.
          --go-grpc_opt=paths=source_relative
          proto/service.proto
  pkg/{{.package}}/interfaces.go:
    module: '{{ .module_go }}'
    visitorClass: InterfacesVisitor
  pkg/{{.package}}/fiber.go:
    module: '{{ .module_go }}'
    visitorClass: FiberVisitor
  pkg/{{.package}}/grpc.go:
    module: '{{ .module_go }}'
    visitorClass: GRPCVisitor
    config:
      protoPackage: {{.module}}/proto
  pkg/{{.package}}/services.go:
    ifNotExists: true
    module: '{{ .module_go }}'
    visitorClass: ScaffoldVisitor
    config:
      types:
        - service
  pkg/{{.package}}/providers.go:
    ifNotExists: true
    module: '{{ .module_go }}'
    visitorClass: ScaffoldVisitor
    config:
      types:
        - provider
  cmd/main.go:
    ifNotExists: false  # Change to true to control dependency injection
    module: '{{ .module_go }}'
    visitorClass: MainVisitor
